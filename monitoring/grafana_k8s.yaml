apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  che-datasource.yaml: |-
    apiVersion: 1
    datasources:
    - name: che
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      jsonData:
        timeInterval: "1s"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-provider
data:
  dashboards.yaml: |-
    {
        "apiVersion": 1,
        "providers": [
            {
                "folder": "",
                "name": "0",
                "options": {
                    "path": "/etc/grafana/provisioning/dashboards/che"
                },
                "orgId": 1,
                "type": "file"
            }
        ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
        - containerPort: 9090
        volumeMounts:
        - mountPath: /etc/grafana/provisioning/datasources
          name: volume-datasources
        - mountPath: /etc/grafana/provisioning/dashboards/che
          name: volume-dashboards
        - mountPath: /etc/grafana/provisioning/dashboards
          name: volume-dashboard-provider
      volumes:
      - configMap:
          defaultMode: 420
          name: grafana-datasources
        name: volume-datasources
      - configMap:
          defaultMode: 420
          name: che-grafana-dashboards
        name: volume-dashboards
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-provider
        name: volume-dashboard-provider
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: grafana
spec:
  rules:
  - host: grafana-{k8sip}.nip.io
    http:
      paths:
      - backend:
          serviceName: grafana
          servicePort: 3000
